[build-system]
requires = ['setuptools']
build-backend = 'setuptools.build_meta'

[project]
dynamic = [
    'version',
#    'entry-points', 'scripts'
]
name = 'ds_tools'
description = 'Misc Python 3 libraries and scripts'
readme = 'readme.rst'
authors = [{name='Doug Skrypa', email='dskrypa@gmail.com'}]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Environment :: Console',
    'Intended Audience :: Developers',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Programming Language :: Python :: 3.14',
]
requires-python = '>=3.11'
dependencies = [
    'cli-command-parser',
    'db_cache @ git+https://github.com/dskrypa/db_cache',
    'requests_client @ git+https://github.com/dskrypa/requests_client',
    'beautifulsoup4',
    'bitarray',
    'cachetools',
    'psutil',
    'PyYAML',
    'requests',
    'SQLAlchemy',
    'tqdm',
    'tzlocal',
    'wrapt',
    'wcwidth',
]

[project.urls]
Source = 'https://github.com/dskrypa/ds_tools'
Issues = 'https://github.com/dskrypa/ds_tools/issues'

[project.optional-dependencies]
archives = ['py7zr', 'rarfile', 'cryptography', 'zstandard']  # ds_tools.fs.archives
cffi = ['cffi']  # bin/cffi_test.py, bin/f3.py, examples/cffi/*
click = ['click', 'click_option_group']  # ds_tools.argparsing.click_parsing
completion = ['argcomplete']  # bash autocompletion
dev = ['coverage', 'ipython', 'rich', 'pre-commit']  # Development env requirements
docs = ['sphinx']
exif = ['exifread']
flask = ['flask', 'jinja2', 'werkzeug']
game_saves = ['send2trash', 'watchdog', 'zstandard']
gunicorn = ['gevent', 'gunicorn']
# Note: 'skimage' is required for image comparison, but it requires scipy, which breaks in python 3.10
images = ['numpy', 'pillow', 'pandas', 'pyarrow', 'scikit-image; python_version < "3.10"']
J2R = ['pykakasi']
pdf = ['pypdf2']
socketio = ['flask_socketio', 'gevent']
translate = ['googletrans']
windows = ['pywin32']
youtube = ['pytube3']

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ['ds_tools*']
namespaces = false

[tool.setuptools.dynamic]
version = {attr='ds_tools.__version__.__version__'}

# [tool.uv]
# reinstall-package = ['ds_tools']  # Always reinstall to generate entry points

[tool.ruff]
# https://docs.astral.sh/ruff/configuration/
exclude = ['.git', '.ruff_cache', 'build', 'dist', 'site-packages', 'venv']
line-length = 120
indent-width = 4
target-version = 'py312'
show-fixes = true

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or McCabe complexity (`C901`) by default.
select = ['E4', 'E7', 'E9', 'F', 'W', 'I001']
ignore = [
    'E402',  # module level import not at top of file
    'F401',  # <module> imported but unused
    'F841',  # local variable <var> is assigned to but never used
#    'W503',  # line break before binary operator (conflicts with Black)
    'W605',  # invalid escape sequence <seq>
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ['ALL']
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = '^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$'

[tool.ruff.format]
quote-style = 'single'
indent-style = 'space'
skip-magic-trailing-comma = false  # Like Black, respect magic trailing commas.
line-ending = 'lf'

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
# This is currently disabled by default, but it is planned for this to be opt-out in the future.
docstring-code-format = false
# Set the line length limit used when formatting code snippets in docstrings.
# This only has an effect when the `docstring-code-format` setting is enabled.
docstring-code-line-length = 'dynamic'

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ['ds_tools']
